---
apiVersion: v1
kind: List
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
{{ include "labels.stakater" . | indent 6 }}
{{ include "labels.chart" . | indent 6 }}
    name: {{ template "name" . }}
  spec:
    replicas: 1
    selector:
      matchLabels:
{{ include "labels.selector" . | indent 8 }}
    template:
      metadata:
        labels:
{{ include "labels.selector" . | indent 10 }}
      spec:
        initContainers:
        - name: init
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["chmod","777","/usr/share/elasticsearch/data"]
          volumeMounts:
          - name: data
            mountPath: /usr/share/elasticsearch/data
        - name: init-sysctl
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
        containers:
        - env:
          - name: KUBERNETES_MASTER
            value: {{ .Values.kubernetes.host }}
          - name: SERVICE
            value: elasticsearch-masters
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          # image: stakater/elasticsearch:6.1.0
          image: "{{ .Values.elasticSearch.image.name }}:{{ .Values.elasticSearch.image.tag }}"
          imagePullPolicy: {{ .Values.elasticSearch.image.pullPolicy }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.elasticSearch.probes.liveness.initialDelaySeconds }}
            tcpSocket:
              port: 9300
          name: {{ template "name" . }}
          readinessProbe:
            httpGet:
              # path: /_template/logs
              path: /_template/logstash
              port: 9200
            initialDelaySeconds: {{ .Values.elasticSearch.probes.readiness.initialDelaySeconds }}
            failureThreshold: {{ .Values.elasticSearch.probes.readiness.failureThreshold }}
          securityContext:
            privileged: false
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: data
        # - image: stakater/es-k8s-logs-template:1.0.0
        - image: "{{ .Values.elasticSearch.logsTemplate.image.name }}:{{ .Values.elasticSearch.logsTemplate.image.tag }}"
          name: logs-template
        volumes:
        - name: data
        {{- if .Values.elasticSearch.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.elasticSearch.persistence.volumeClaimName }}
        {{- else }}
          emptyDir: {}
        {{- end }}